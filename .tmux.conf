# unbind-key -a

# Change prefix to Ctrl-a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
# also unbind C-b to free it up
unbind C-b

# Start windows and panes at 1, not 0
set -g base-index 1

# Smart pane switching with awareness of vim splits
# Reference: https://gist.github.com/mislav/5189704
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -n C-z resize-pane -Z
bind    C-z resize-pane -Z
bind C-p previous-window  # Allow holding Ctrl after C-a
bind C-n next-window
# Resize pane using C-A S-[HJKL]
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
# jump to the previous prompt
bind -n M-b {
    copy-mode
    send -X clear-selection
    send -X start-of-line
    send -X search-backward '\$ [^ ]'
    send -X stop-selection
    send -X search-forward "[^ ]"
    send -X stop-selection
}

# jump to the next prompt
bind -n M-n {
    copy-mode
    send -X clear-selection
    send -X end-of-line
    send -X search-forward '\$ [^ ]'
    send -X stop-selection
    send -X search-forward "[^ ]"
    send -X stop-selection
}

# select previous command's output
bind -n M-B {
    set wrap-search off
    copy-mode
    send -X clear-selection
    send -X start-of-line
    if -F "#{m/r:^[^$]+$,#{copy_cursor_line}}" {
        # currently in an output line, skip to previous prompt first
        send -X search-backward "\$ "
        send -X stop-selection
    }
    # goto nearest output line
    send -X search-backward "^[^$]+$"
    send -X stop-selection
    # check if this visual line belongs to a multiline prompt (hence is not a part of output)
    send -X start-of-line
    if -F "#{m:*$*,#{copy_cursor_line}}" {
        # tmux doesn't support loops, so just stop here
    } {
        send -X end-of-line
        send -X cursor-left # do not take new line char
        send -X begin-selection
        send -X search-backward-text "$"
        send -X end-of-line
        send -X cursor-right
        send -X stop-selection
    }
    set wrap-search on
}

# go to previous line, first non blank character
#bind -n M-\[ {
#    copy-mode
#    send -X clear-selection
#    send -X start-of-line
#    send -X cursor-up
#    send -X start-of-line
#    if -F "#{m/r:^\s+,#{copy_cursor_line}}" {
#        # line starts with blanks, skip those
#        send -X search-forward "[^ ]"
#        send -X stop-selection
#    }
#}

# Custom keys
bind-key |   split-window -h -c '#{pane_current_path}'
bind-key -   split-window -v -c '#{pane_current_path}'

# Mouse stuff (should be no longer needed when we update to 2.1)
setw -g mouse on        # Make mouse useful in copy mode

# Move using Ctrl + left/right
set-window-option -g xterm-keys on

# Scroll History
set -g history-limit 30000

# clipboard
# set -s set-clipboard on
# set -s set-clipboard external

# Copy mode: make it works like vim
set-window-option -g mode-keys vi  # Vim movements
unbind p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection 'xclip -in -selection clipboard'

bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xclip -selection clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xclip -selection clipboard"


# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'

######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=green
set -g pane-border-status top
#set -g pane-border-format "#{pane_index} #{pane_current_command}"
#set -g pane-border-format '#(ps --no-headers -t #{pane_tty} -o args -O-c | grep -ivE "gitstatus|zsh|sleep")'

## Status bar design
# status line
set -g status-justify left
set -g status-bg default

# messaging
set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=black

#window mode
setw -g mode-style bg=colour6,fg=colour0
set-option -g renumber-windows on

# window status
set-option -g allow-rename off   # Keep window name unchanged
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135
#setw -g mode-style fg=colour196,bg=colour238,bold

# }

# The statusbar {
set -g status-position bottom
set -g status-bg colour234
set -g status-left ''
set -g status-right ''
set -g status-right-length 50
set -g status-left-length 50

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W '
setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W '
setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# }
# The messages {

set -g message-style fg=colour232,bg=colour166,bold

# }

